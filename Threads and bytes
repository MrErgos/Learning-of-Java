//★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
import java.util.*;                                                                                                                                                                                                        
import java.io.*;
/*                                                                                                                                                                                                                                                           
 Нити и байты 

 Читайте с консоли имена файлов, пока не будет введено слово "exit".
 Передайте имя файла в нить ReadThread.
 Нить ReadThread должна найти байт, который встречается в файле максимальное число раз, и добавить его в словарь resultMap,
 где параметр String - это имя файла, параметр Integer - это искомый байт.
 Закрыть потоки.
 
 ****************************************          
 Threads and bytes

 Read the filenames from the console until the word "exit" is entered.
 Pass the filename to the ReadThread thread.
 The ReadThread thread must find the byte that occurs the maximum number of times in the file and add it to the resultMap dictionary,
 where the String parameter is the filename and the Integer parameter is the byte to search for.
 Close streams.
 
 */                                                                                                                                                                                                                                                          
public class Solution {                                                  
    public static Map<String, Integer> resultMap = new HashMap<String, Integer>();                                                  

    public static void main(String[] args) throws IOException{  
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		ReadThread rthread;
		String str;
		while (!(str = reader.readLine()).equals("exit")){
			rthread = new ReadThread(str);
			rthread.start();
		}
		reader.close();
    }                                                  

    public static class ReadThread extends Thread {     
		BufferedReader reader;
		String name;
        public ReadThread(String fileName) throws FileNotFoundException {                                                  
            reader = new BufferedReader(new FileReader(fileName));  
			name = fileName;
        }

		@Override
		public void run()
		{
			try
			{
				TreeMap<Integer,Integer> map = new TreeMap<>();
				while (reader.ready()){
					int c = reader.read();
					if (map.containsKey(c))
						map.replace(c,map.get(c)+1);
					else
						map.put(c,1);
				}
				int max = 1;
				int maxByte = 0;
				for (Map.Entry<Integer,Integer> pair : map.entrySet()){
					if (pair.getValue() > max){
						max = pair.getValue();
						maxByte = pair.getKey();
					}
				}
				resultMap.put(name,maxByte);
				reader.close();
			}
			catch (IOException e)
			{}
		}                                                 
        
    }                                                  
}            
