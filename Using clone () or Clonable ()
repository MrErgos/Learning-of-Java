import java.util.LinkedHashMap;                                                  
import java.util.Map;
import java.lang.*;

/*                                                   
Using clone () or Clonable ()                                                   
*/                                                  
public class Solution implements Cloneable{                                                  
	protected Map<String, User> users = new LinkedHashMap();
	
    public static void main(String[] args) {                                                  
        Solution solution = new Solution();                                                  
        solution.users.put("Hubert", new User(172, "Hubert"));                                                  
        solution.users.put("Zapp", new User(41, "Zapp"));                                                  
        Solution clone = null;                                                  
        try {                                                  
            clone = (Solution) solution.clone();                                                  
            System.out.println(solution);                                                  
            System.out.println(clone);                                                  

            System.out.println(solution.users);                                                  
            System.out.println(clone.users);
			
			System.out.println(solution.users.equals(clone.users));

        } catch (CloneNotSupportedException e) {                                                  
            e.printStackTrace(System.err);                                                  
        }                                                  
    }                                                  

    
	@Override
	protected Object clone() throws CloneNotSupportedException
	{
		Map<String, User> user = new LinkedHashMap();
		Solution newSol = new Solution();
		for (Map.Entry<String,User> us : users.entrySet()){
			user.put(us.getKey(),us.getValue());
		}
		newSol.users = user;
		return newSol;
	}                                                  
	
    public static class User {                                                  
        int age;                                                  
        String name;                                                  

        public User(int age, String name) {                                                  
            this.age = age;                                                  
            this.name = name;                                                  
        }

		@Override
		protected Object clone() throws CloneNotSupportedException
		{
			int newAge = Integer.valueOf(age);
			String newName = String.valueOf(name);
			User newUser = new User(newAge,newName);
			return newUser;
		} 
		
    }                                                  
}                
